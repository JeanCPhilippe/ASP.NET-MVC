@model SalesWebMvc.Models.ViewModels.SellerFormViewModel
@{
    ViewData["Title"] = "Create";
}

<h2>@ViewData["Title"]</h2>

<h4>Seller</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        ***Formulário para criar um novo Vendedor***
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Seller.Name" class="control-label"></label>
                <input asp-for="Seller.Name" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.Email" class="control-label"></label>
                <input asp-for="Seller.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.BirthDate" class="control-label"></label>
                <input asp-for="Seller.BirthDate" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Seller.BaseSalary" class="control-label"></label>
                <input asp-for="Seller.BaseSalary" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="Seller.DepartmentId" class="form-group"></label>
                ***Comando utilizado para mostrar os Departamentos através de uma lista***
                <select asp-for="Seller.DepartmentId" asp-items="@(new SelectList(Model.Departments,"id","name"))" class="bg-black" style="background-color = black"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-dark" formmethod="post" />
            </div>

        </form>
    </div>
</div>

//Validação via Javascript
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}